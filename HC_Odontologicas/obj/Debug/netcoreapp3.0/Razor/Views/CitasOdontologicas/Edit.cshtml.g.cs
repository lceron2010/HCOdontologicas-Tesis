#pragma checksum "C:\Users\Laura\Documents\GitHub\HCOdontologicas-Tesis\HC_Odontologicas\Views\CitasOdontologicas\Edit.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "a02ee99ff7728aaf4775b83d51df6dc21b6a7fab"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(AspNetCore.Views_CitasOdontologicas_Edit), @"mvc.1.0.view", @"/Views/CitasOdontologicas/Edit.cshtml")]
namespace AspNetCore
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Mvc;
    using Microsoft.AspNetCore.Mvc.Rendering;
    using Microsoft.AspNetCore.Mvc.ViewFeatures;
#nullable restore
#line 1 "C:\Users\Laura\Documents\GitHub\HCOdontologicas-Tesis\HC_Odontologicas\Views\_ViewImports.cshtml"
using HC_Odontologicas;

#line default
#line hidden
#nullable disable
#nullable restore
#line 2 "C:\Users\Laura\Documents\GitHub\HCOdontologicas-Tesis\HC_Odontologicas\Views\_ViewImports.cshtml"
using HC_Odontologicas.Models;

#line default
#line hidden
#nullable disable
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"a02ee99ff7728aaf4775b83d51df6dc21b6a7fab", @"/Views/CitasOdontologicas/Edit.cshtml")]
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"c422712020532d3975c1726980cbdf05484be000", @"/Views/_ViewImports.cshtml")]
    public class Views_CitasOdontologicas_Edit : global::Microsoft.AspNetCore.Mvc.Razor.RazorPage<HC_Odontologicas.Models.CitaOdontologica>
    {
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_0 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("id", new global::Microsoft.AspNetCore.Html.HtmlString("regForm"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_1 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("action", new global::Microsoft.AspNetCore.Html.HtmlString("/action_page.php"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        #line hidden
        #pragma warning disable 0649
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperExecutionContext __tagHelperExecutionContext;
        #pragma warning restore 0649
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner __tagHelperRunner = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner();
        #pragma warning disable 0169
        private string __tagHelperStringValueBuffer;
        #pragma warning restore 0169
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __backed__tagHelperScopeManager = null;
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __tagHelperScopeManager
        {
            get
            {
                if (__backed__tagHelperScopeManager == null)
                {
                    __backed__tagHelperScopeManager = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager(StartTagHelperWritingScope, EndTagHelperWritingScope);
                }
                return __backed__tagHelperScopeManager;
            }
        }
        private global::Microsoft.AspNetCore.Mvc.TagHelpers.FormTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper;
        private global::Microsoft.AspNetCore.Mvc.TagHelpers.RenderAtEndOfFormTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper;
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
            WriteLiteral("\r\n");
#nullable restore
#line 3 "C:\Users\Laura\Documents\GitHub\HCOdontologicas-Tesis\HC_Odontologicas\Views\CitasOdontologicas\Edit.cshtml"
  
	ViewData["Title"] = "Edit";
	Layout = "~/Views/Shared/_Layout.cshtml";

#line default
#line hidden
#nullable disable
            WriteLiteral(@"
	<style>
		* {
			box-sizing: border-box;
		}

		body {
			background-color: #f1f1f1;
		}

		#regForm {
			background-color: #ffffff;
			margin: 100px auto;
			font-family: Raleway;
			padding: 40px;
			width: 70%;
			min-width: 300px;
		}

		h1 {
			text-align: center;
		}

		input {
			padding: 10px;
			width: 100%;
			font-size: 17px;
			font-family: Raleway;
			border: 1px solid #aaaaaa;
		}

			/* Mark input boxes that gets an error on validation: */
			input.invalid {
				background-color: #ffdddd;
			}

		/* Hide all steps by default: */
		.tab {
			display: none;
		}

		button {
			background-color: #4CAF50;
			color: #ffffff;
			border: none;
			padding: 10px 20px;
			font-size: 17px;
			font-family: Raleway;
			cursor: pointer;
		}

			button:hover {
				opacity: 0.8;
			}

		#prevBtn {
			background-color: #bbbbbb;
		}

		/* Make circles that indicate the steps of the form: */
		.step {
			height: 15px;
			width: 15px;
			margin: 0 2px");
            WriteLiteral(@";
			background-color: #bbbbbb;
			border: none;
			border-radius: 50%;
			display: inline-block;
			opacity: 0.5;
		}

			.step.active {
				opacity: 1;
			}

			/* Mark the steps that are finished and valid: */
			.step.finish {
				background-color: #4CAF50;
			}
	</style>

	");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("form", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "a02ee99ff7728aaf4775b83d51df6dc21b6a7fab5724", async() => {
                WriteLiteral(@"
		<h1>Register:</h1>
		<!-- One ""tab"" for each step in the form: -->
		<div class=""tab"">
			Datos Informativos:
			<p><input placeholder=""First name..."" oninput=""this.className = ''"" name=""fname""></p>
			<p><input placeholder=""Last name..."" oninput=""this.className = ''"" name=""lname""></p>
		</div>
		<div class=""tab"">
			Anamnesis:
			
		</div>
		<div class=""tab"">
			Birthday:
			<p><input placeholder=""dd"" oninput=""this.className = ''"" name=""dd""></p>
			<p><input placeholder=""mm"" oninput=""this.className = ''"" name=""nn""></p>
			<p><input placeholder=""yyyy"" oninput=""this.className = ''"" name=""yyyy""></p>
		</div>
		<div class=""tab"">
			Login Info:
			<p><input placeholder=""Username..."" oninput=""this.className = ''"" name=""uname""></p>
			<p><input placeholder=""Password..."" oninput=""this.className = ''"" name=""pword"" type=""password""></p>
		</div>
		<div style=""overflow:auto;"">
			<div style=""float:right;"">
				<button type=""button"" id=""prevBtn"" onclick=""nextPrev(-1)"">Previous</button>
				<b");
                WriteLiteral(@"utton type=""button"" id=""nextBtn"" onclick=""nextPrev(1)"">Next</button>
			</div>
		</div>
		<!-- Circles which indicates the steps of the form: -->
		<div style=""text-align:center;margin-top:40px;"">
			<span class=""step""></span>
			<span class=""step""></span>
			<span class=""step""></span>
			<span class=""step""></span>
		</div>
	");
            }
            );
            __Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.FormTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper);
            __Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.RenderAtEndOfFormTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_0);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_1);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral(@"



<script>		
var currentTab = 0; // Current tab is set to be the first tab (0)
showTab(currentTab); // Display the current tab

function showTab(n) {
  // This function will display the specified tab of the form...
  var x = document.getElementsByClassName(""tab"");
  x[n].style.display = ""block"";
  //... and fix the Previous/Next buttons:
  if (n == 0) {
    document.getElementById(""prevBtn"").style.display = ""none"";
  } else {
    document.getElementById(""prevBtn"").style.display = ""inline"";
  }
  if (n == (x.length - 1)) {
    document.getElementById(""nextBtn"").innerHTML = ""Submit"";
  } else {
    document.getElementById(""nextBtn"").innerHTML = ""Next"";
  }
  //... and run a function that will display the correct step indicator:
  fixStepIndicator(n)
}

function nextPrev(n) {
  // This function will figure out which tab to display
  var x = document.getElementsByClassName(""tab"");
  // Exit the function if any field in the current tab is invalid:
  if (n == 1 && !validateForm()) r");
            WriteLiteral(@"eturn false;
  // Hide the current tab:
  x[currentTab].style.display = ""none"";
  // Increase or decrease the current tab by 1:
  currentTab = currentTab + n;
  // if you have reached the end of the form...
  if (currentTab >= x.length) {
    // ... the form gets submitted:
    document.getElementById(""regForm"").submit();
    return false;
  }
  // Otherwise, display the correct tab:
  showTab(currentTab);
}

function validateForm() {
  // This function deals with validation of the form fields
  var x, y, i, valid = true;
  x = document.getElementsByClassName(""tab"");
  y = x[currentTab].getElementsByTagName(""input"");
  // A loop that checks every input field in the current tab:
  for (i = 0; i < y.length; i++) {
    // If a field is empty...
    if (y[i].value == """") {
      // add an ""invalid"" class to the field:
      y[i].className += "" invalid"";
      // and set the current valid status to false
      valid = false;
    }
  }
  // If the valid status is true, mark the step as");
            WriteLiteral(@" finished and valid:
  if (valid) {
    document.getElementsByClassName(""step"")[currentTab].className += "" finish"";
  }
  return valid; // return the valid status
}

function fixStepIndicator(n) {
  // This function removes the ""active"" class of all steps...
  var i, x = document.getElementsByClassName(""step"");
  for (i = 0; i < x.length; i++) {
    x[i].className = x[i].className.replace("" active"", """");
  }
  //... and adds the ""active"" class on the current step:
  x[n].className += "" active"";
}
</script>



");
        }
        #pragma warning restore 1998
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<HC_Odontologicas.Models.CitaOdontologica> Html { get; private set; }
    }
}
#pragma warning restore 1591
